services:
  postgres:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./backend/database_schema:/docker-entrypoint-initdb.d

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PORT: 8080
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_ADDRESS: postgres
      DATABASE_NAME: postgres
      GIN_MODE: release
    restart: always
    ports:
      - 8080:8080

  data-fetcher:
    build:
      context: ./backend
      dockerfile: Dockerfile.data-fetcher
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_ADDRESS: postgres
      DATABASE_NAME: postgres
    restart: always

  webapp:
    build:
      context: ./webapp
    depends_on:
      - api
    ports:
      - 3000:80